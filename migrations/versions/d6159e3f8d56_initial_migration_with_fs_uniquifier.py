"""Initial migration with fs_uniquifier

Revision ID: d6159e3f8d56
Revises: 
Create Date: 2025-08-27 11:33:30.155146

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd6159e3f8d56'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chofer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre_completo', sa.String(length=200), nullable=False),
    sa.Column('dni', sa.String(length=10), nullable=False),
    sa.Column('licencia', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dni')
    )
    op.create_table('planta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('codigo', sa.String(length=3), nullable=False),
    sa.Column('ubicacion', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('productor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre_completo', sa.String(length=200), nullable=False),
    sa.Column('cuit', sa.String(length=13), nullable=False),
    sa.Column('renpa', sa.String(length=20), nullable=True),
    sa.Column('telefono', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cuit'),
    sa.UniqueConstraint('renpa')
    )
    with op.batch_alter_table('productor', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_productor_nombre_completo'), ['nombre_completo'], unique=False)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('vehiculo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('placa', sa.String(length=10), nullable=False),
    sa.Column('marca', sa.String(length=50), nullable=True),
    sa.Column('modelo', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('placa')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=255), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('fs_uniquifier')
    )
    op.create_table('carga',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lote_id', sa.String(length=20), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('productor_id', sa.Integer(), nullable=False),
    sa.Column('chofer_id', sa.Integer(), nullable=False),
    sa.Column('vehiculo_id', sa.Integer(), nullable=False),
    sa.Column('fecha_entrada', sa.DateTime(), nullable=True),
    sa.Column('fecha_salida', sa.DateTime(), nullable=True),
    sa.Column('peso_bruto', sa.Float(), nullable=False),
    sa.Column('peso_tara', sa.Float(), nullable=True),
    sa.Column('numero_bascula', sa.Integer(), nullable=False),
    sa.Column('usuario_balancero_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chofer_id'], ['chofer.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.ForeignKeyConstraint(['productor_id'], ['productor.id'], ),
    sa.ForeignKeyConstraint(['usuario_balancero_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vehiculo_id'], ['vehiculo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('carga', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_carga_fecha_entrada'), ['fecha_entrada'], unique=False)
        batch_op.create_index(batch_op.f('ix_carga_lote_id'), ['lote_id'], unique=True)

    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    with op.batch_alter_table('carga', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_carga_lote_id'))
        batch_op.drop_index(batch_op.f('ix_carga_fecha_entrada'))

    op.drop_table('carga')
    op.drop_table('user')
    op.drop_table('vehiculo')
    op.drop_table('role')
    with op.batch_alter_table('productor', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_productor_nombre_completo'))

    op.drop_table('productor')
    op.drop_table('planta')
    op.drop_table('chofer')
    # ### end Alembic commands ###